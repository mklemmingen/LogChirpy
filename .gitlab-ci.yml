variables:
  GIT_DEPTH: 0  # ensures full clone to include all objects

stages:
  - deploy

deploy-logchirpy:
  stage: deploy
  script:
    - echo "Deploying LogChirpy to GitHub..."
    - git config --global user.email "mklemmingen@users.noreply.github.com"
    - git config --global user.name "mklemmingen"
    - git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/mklemmingen/LogChirpy.git

    # Make sure we are on latest main from GitHub
    - git fetch origin main --tags
    - git checkout -B main origin/main

    # Remove a specific commit (6dc08e15) while keeping others intact
    - echo "Rewriting history to remove commit 6dc08e15..."
    - git rebase --onto 6dc08e15^ 6dc08e15

    # (Optional) sanitize old email — leave this out if not needed
    #- echo "Rewriting Git history to replace private email..."
    #- |
    #  git filter-branch --env-filter '
    #  OLD_EMAIL="martin.lauterbach@student.reutlingen-university.de"
    #  CORRECT_NAME="mklemmingen"
    #  CORRECT_EMAIL="mklemmingen@users.noreply.github.com"
    #
    #  if [ "$GIT_COMMITTER_EMAIL" = "$OLD_EMAIL" ]; then
    #      export GIT_COMMITTER_NAME="$CORRECT_NAME"
    #      export GIT_COMMITTER_EMAIL="$CORRECT_EMAIL"
    #  fi
    #  if [ "$GIT_AUTHOR_EMAIL" = "$OLD_EMAIL" ]; then
    #      export GIT_AUTHOR_NAME="$CORRECT_NAME"
    #      export GIT_AUTHOR_EMAIL="$CORRECT_EMAIL"
    #  fi
    #  ' --tag-name-filter cat -- --branches --tags

    - echo "Final Git Log:"
    - git log -n 5 --oneline --graph --decorate

    - git push --force origin main
    - echo "✅ LogChirpy successfully deployed (commit 6dc08e15 removed)."
  environment: production
  only:
    - main
