variables:
  GIT_DEPTH: 0  # full history required for history rewrite

stages:
  - deploy

deploy-logchirpy:
  stage: deploy
  script:
    - echo "Deploying LogChirpy to GitHub with truncated and sanitized history..."

    # Git config for CI
    - git config --global user.email "mklemmingen@users.noreply.github.com"
    - git config --global user.name "mklemmingen"

    # Update GitHub remote
    - git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/mklemmingen/LogChirpy.git

    # Find the first commit on or after April 12, 2025
    - export KEEP_COMMIT=$(git rev-list --reverse --since="2025-04-12T00:00:00" main | head -n 1)
    - echo "Keeping commits from: $KEEP_COMMIT"

    # Create a branch from the KEEP_COMMIT and rebase the history to start there
    - git checkout --detach $KEEP_COMMIT
    - git checkout -b main-clean

    - git rebase --root --onto ${KEEP_COMMIT}^

    # Rewrite author and committer info if it matches private email
    - |
      git filter-branch --env-filter '
        OLD_EMAIL="martin.lauterbach@student.reutlingen-university.de"
        CORRECT_NAME="mklemmingen"
        CORRECT_EMAIL="mklemmingen@users.noreply.github.com"

        if [ "$GIT_COMMITTER_EMAIL" = "$OLD_EMAIL" ]; then
            export GIT_COMMITTER_NAME="$CORRECT_NAME"
            export GIT_COMMITTER_EMAIL="$CORRECT_EMAIL"
        fi
        if [ "$GIT_AUTHOR_EMAIL" = "$OLD_EMAIL" ]; then
            export GIT_AUTHOR_NAME="$CORRECT_NAME"
            export GIT_AUTHOR_EMAIL="$CORRECT_EMAIL"
        fi
      ' --tag-name-filter cat -- --branches --tags

    # Optional: Add a meta commit
    - echo "Project history was truncated and sanitized on $(date)" > HISTORY_NOTE.md
    - git add HISTORY_NOTE.md
    - git commit -m "Chore: truncated history from April 12, 2025 onward and sanitized email"

    # Force push to GitHub main branch
    - git push --force origin main-clean:main

    - echo "LogChirpy successfully deployed with cleaned history."
  environment: production
  only:
    - main
