variables:
  GIT_DEPTH: 0  # ensures full clone including all history

stages:
  - deploy

deploy-logchirpy:
  stage: deploy
  image: ruby:2.7
  script:
    - echo "Installing git-filter-repo..."
    - apt-get update && apt-get install -y python3 wget
    - wget https://raw.githubusercontent.com/newren/git-filter-repo/main/git-filter-repo -O /usr/local/bin/git-filter-repo
    - chmod +x /usr/local/bin/git-filter-repo

    - echo "Git setup..."
    - git config --global user.email "mklemmingen@users.noreply.github.com"
    - git config --global user.name "mklemmingen"
    - git checkout -B main

    - echo "Identifying large files in history..."
    - git rev-list --objects --all | git cat-file --batch-check='%(objecttype) %(objectname) %(objectsize) %(rest)' | awk '/^blob/ {if($3 > 50*1024*1024) print $4}' > large_files.txt
    - echo "Large files found:"
    - cat large_files.txt

    - echo "Removing all large files (>50MB) from history..."
    - |
      if [ -s large_files.txt ]; then
        while IFS= read -r file; do
          echo "Removing large file: $file"
          git-filter-repo --force --path "$file" --invert-paths
        done < large_files.txt
      else
        echo "No large files found"
      fi

    - echo "Removing specific problematic commit..."
    - >
      git-filter-repo --force --commit-callback '
        if commit.original_id == b"6dc08e153ae7aa2670a085104a1dbb95dd64254c":
            commit.skip()
      '

    - echo "Removing all .env files from history..."
    - >
      git-filter-repo --force
      --path-glob '**/.env'
      --invert-paths

    - echo "Removing common large file types from history..."
    - >
      git-filter-repo --force
      --path-glob '*.data-*-of-*'
      --path-glob '*.bin'
      --path-glob '*.weights'
      --path-glob '*.h5'
      --path-glob '*.pb'
      --path-glob '*.onnx'
      --path-glob '*.pth'
      --path-glob '*.tar.gz'
      --path-glob '*.zip'
      --path-glob '*.7z'
      --path-glob '*.rar'
      --invert-paths

    - echo "Rewriting student email to GitHub address..."
    - >
      git-filter-repo --force --email-callback '
        if email == b"martin.lauterbach@student.reutlingen-university.de":
            return b"mklemmingen@users.noreply.github.com"
        return email
      '

    - echo "Final cleanup - removing any remaining files >10MB..."
    - git rev-list --objects --all | git cat-file --batch-check='%(objecttype) %(objectname) %(objectsize) %(rest)' | awk '/^blob/ {if($3 > 10*1024*1024) print $4}' > remaining_large_files.txt
    - |
      if [ -s remaining_large_files.txt ]; then
        echo "Removing remaining large files:"
        cat remaining_large_files.txt
        while IFS= read -r file; do
          git-filter-repo --force --path "$file" --invert-paths
        done < remaining_large_files.txt
      fi

    - echo "Pushing cleaned history to GitHub..."
    - git remote add origin https://x-access-token:${GITHUB_TOKEN}@github.com/mklemmingen/LogChirpy.git
    - git push --force origin main
    - echo "Successfully deployed cleaned GitHub history."
  only:
    - main
  environment: production